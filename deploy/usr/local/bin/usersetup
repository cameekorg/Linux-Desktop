#!/bin/bash

usage() {
    if [ "$*" ]; then
        echo "$*"
        echo
    fi
    echo "Usage: $NAME [--uid UID] [--user USER] [--password PASS] [--vnc-password VNCPASS]"
    echo
    echo "Configure new user as a first-time action."    
    echo
    echo "    --uid UID              Old user ID, usually 1000"
    echo "    --user USER            New user name to be set"
    echo "    --password PASS        New password to be set"
    echo "    --vnc-password VNCPASS New VNC password to be set, max 8 chars"
    echo "                           (VNC doesn't allow more than 8 chars)"
    echo "    --skip FLG             Use value 1 to skip this"
    echo "                                    "
    exit 2
}


die() {
    echo
    echo "$*"
    echo
    exit 1
}


skip() {
    echo
    echo "User setup skipped!"
    echo
    exit 0
}


# Default Arguments Values
SKIP_ARG=""
UID_ARG=""
USER_ARG=""
PASS_ARG=""
VNC_PASS_ARG=""


# Parse Arguments
while [ "$*" ]; do
    param=$1; shift; OPTARG=$1
    case $param in
    --uid)           UID_ARG="$OPTARG"; shift        ;;
    --user)          USER_ARG="$OPTARG"; shift       ;;
    --password)      PASS_ARG="$OPTARG"; shift       ;;
    --vnc-password)  VNC_PASS_ARG="$OPTARG"; shift   ;;
    --skip)          SKIP_ARG="$OPTARG"; shift       ;;
    -h|--help) usage                                   ;;
    -*) usage "Unknown option: $param"               ;;
    *) break                                           ;;
    esac
done


# Print Title
echo
echo "Configuring new user name and password as a first-time action"
echo "(recommended)"
echo


# Get Skip Flag
if [ -z "$SKIP_ARG" ]; then
    read -p "To skip this setup type [Y or y]: " SKIP_ARG
    echo
fi


# Skip process if user really wants
if [[ "$SKIP_ARG" =~ ^[yY]$ ]]; then skip; fi


# Get User ID
if [ -z "$UID_ARG" ]; then
    read -p "Enter UID: " UID_ARG
    while ! [[ "$UID_ARG" =~ ^[0-9]{4}$ ]] ; do
        echo "Wrong UID, should be in format NNNN"
        read -p "Enter UID: " UID_ARG
    done
fi


# Get User Name
if [ -z "$USER_ARG" ]; then
    read -p "User Name: " USER_ARG
    while ! [[ "$USER_ARG" =~ ^[a-z_]([a-z0-9_-]{0,31}|[a-z0-9_-]{0,30}\$)$ ]] ; do
        echo "Invalid User Name string, should not contain special chars and has max 31 chars"
        read -p "User Name: " USER_ARG
    done
fi


# Get Password
if [ -z "$PASS_ARG" ]; then
    read -s -p "Password: " PASS_ARG
    echo
    while [[ ${#PASS_ARG} -gt 128 ]] ; do
        echo "Wrong Password, should not be larger than 128 chars"
        read -s -p "Password: " PASS_ARG
        echo
    done
fi


# Get VNC Password
if [ -z "$VNCPASS_ARG" ]; then    
    read -s -p "VNC Password (max. 8 chars): " VNCPASS_ARG
    echo
    while [[ ${#VNCPASS_ARG} -gt 8 ]] ; do
        echo "Wrong VNC Password, should not be larger than 8 chars"
        read -s -p "VNC Password: " VNCPASS_ARG
        echo
    done
fi


# Find Original User Name
USEROLD=$(id -nu $UID_ARG)


# Rename User
usermod -l $USER_ARG $USEROLD
STATUS=$?; if [ $STATUS -ne 0 ]; then die "Cannot rename user from default user (usermod failed)"; fi


# Rename User Group
groupmod -n $USER_ARG $USEROLD
STATUS=$?; if [ $STATUS -ne 0 ]; then die "Cannot rename user group from default user group (groupmod failed)"; fi


# Rename VNC User
sed -i "s/:1=$USEROLD/:1=$USER_ARG/g" /etc/tigervnc/vncserver.users
STATUS=$?; if [ $STATUS -ne 0 ]; then die "Cannot rename VNC user (sed failed)"; fi


# Change User Home Directory
mkdir -p /data/$(hostname)

ln -s /data/$(hostname) /home/$USER_ARG
STATUS=$?; if [ $STATUS -ne 0 ]; then die "Cannot change user home directory (symlink failed)"; fi

cp -R -n /home/$USEROLD/. /home/$USER_ARG
STATUS=$?; if [ $STATUS -ne 0 ]; then die "Cannot change user home directory (recursive copy failed)"; fi

chown -R $USER_ARG:$USER_ARG /data/$(hostname)
STATUS=$?; if [ $STATUS -ne 0 ]; then die "Cannot change user home directory (chown failed)"; fi

usermod -d /home/$USER_ARG $USER_ARG
STATUS=$?; if [ $STATUS -ne 0 ]; then die "Cannot change user home directory (usermod failed)"; fi

rm -R -f /home/$USEROLD
STATUS=$?; if [ $STATUS -ne 0 ]; then die "Cannot cleanup default home directory (rm failed)"; fi


# Change Password
echo "$USER_ARG:$PASS_ARG" | chpasswd
STATUS=$?; if [ $STATUS -ne 0 ]; then die "Cannot change user password (chpasswd failed)"; fi


# Change VNC Password
echo "$VNCPASS_ARG" | /usr/bin/vncpasswd -f > /home/$USER_ARG/.vnc/passwd
STATUS=$?; if [ $STATUS -ne 0 ]; then die "Cannot change VNC password (vncpasswd failed)"; fi


# Success
echo
echo "User successfully configured."
echo
